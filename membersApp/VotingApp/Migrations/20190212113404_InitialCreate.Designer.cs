// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VotingApp.Data;

namespace VotingApp.Migrations
{
    [DbContext(typeof(VotingAppDBContext))]
    [Migration("20190212113404_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VotingApp.Models.Attendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AzureID")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Attendeess");
                });

            modelBuilder.Entity("VotingApp.Models.Ballot", b =>
                {
                    b.Property<int>("BallotId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BallotEndTime");

                    b.Property<int>("BallotName");

                    b.Property<DateTime>("BallotStartTime");

                    b.Property<bool>("IsActiveBallot");

                    b.Property<int>("SessionCurrentSessionID");

                    b.HasKey("BallotId");

                    b.HasIndex("SessionCurrentSessionID");

                    b.ToTable("Ballots");
                });

            modelBuilder.Entity("VotingApp.Models.Member", b =>
                {
                    b.Property<string>("AzureId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<int>("SeatNumber");

                    b.HasKey("AzureId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("VotingApp.Models.Session", b =>
                {
                    b.Property<int>("CurrentSessionID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndTime");

                    b.Property<bool>("IsActiveSession");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("CurrentSessionID");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("VotingApp.Models.Vote", b =>
                {
                    b.Property<int>("VoteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BallotId");

                    b.Property<int>("CastVote");

                    b.Property<string>("MemberAzureId")
                        .IsRequired();

                    b.HasKey("VoteId");

                    b.HasIndex("BallotId");

                    b.HasIndex("MemberAzureId");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("VotingApp.Models.Ballot", b =>
                {
                    b.HasOne("VotingApp.Models.Session", "Session")
                        .WithMany()
                        .HasForeignKey("SessionCurrentSessionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VotingApp.Models.Vote", b =>
                {
                    b.HasOne("VotingApp.Models.Ballot", "Ballot")
                        .WithMany()
                        .HasForeignKey("BallotId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VotingApp.Models.Member", "Member")
                        .WithMany()
                        .HasForeignKey("MemberAzureId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
